<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

  <!--<tx:annotation-driven />-->

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost/spitter"/>
    <property name="username" value="test"/>
    <property name="password" value="test"/>
    <property name="initialSize" value="10"/>
  </bean>

  <!--<bean id="sessionFactory"-->
        <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
    <!--<property name="dataSource" ref="dataSource" />-->
    <!--<property name="packagesToScan" value="com.learning.springIdol.model" />-->
    <!--<property name="hibernateProperties">-->
      <!--<props>-->
        <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
        <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
        <!--<prop key="hibernate.show_sql">true</prop>-->
      <!--</props>-->
    <!--</property>-->
    <!--&lt;!&ndash;<property name="annotatedClasses">&ndash;&gt;-->
      <!--&lt;!&ndash;<list>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>com.learning.springIdol.model.Employee</value>&ndash;&gt;-->
      <!--&lt;!&ndash;</list>&ndash;&gt;-->
    <!--&lt;!&ndash;</property>&ndash;&gt;-->
  <!--</bean>-->

  <!--<bean id="transactionManager" class=-->
          <!--"org.springframework.orm.hibernate4.HibernateTransactionManager">-->
    <!--<property name="sessionFactory" ref="sessionFactory" />-->
  <!--</bean>-->

  <!--<tx:annotation-driven transaction-manager="txManager" />-->

  <!--<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>-->

  <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--<constructor-arg ref="datasource"/>-->
  <!--</bean>-->

  <!--JPA-->
  <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
    <property name="packagesToScan" value="com.learning.springIdol.model" />
  </bean>

  <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    <property name="database" value="MYSQL"/>
    <property name="showSql" value="true"/>
    <property name="generateDdl" value="false"/>
    <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
  </bean>

  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="emf" />
  </bean>

  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>
  <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management;
       such as when @Transactional methods are invoked -->
  <tx:annotation-driven />
  
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED"/>
      <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="save*" propagation="REQUIRED"/>
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:advisor advice-ref="txAdvice" pointcut="execution(* *..EmployeeDAO.*(..))"/>
  </aop:config>
  
  </beans>